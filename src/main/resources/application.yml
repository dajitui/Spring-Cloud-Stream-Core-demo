server:
  port: 8080

spring:
  cloud:
    stream:
      defaultBinder:
      bindings:
        input:
          destination: mqTestDefault    # 目的，对应 MQ 是 exchange， 生成临时队列
          consumer:
            concurrency: 4
            maxAttempts: 4 # 当消息消费失败时，尝试消费该消息的最大次数（消息消费失败后，发布者会重新投递）。默认3
            backOffInitialInterval: 3000 # 消息消费失败后重试消费消息的初始化间隔时间。默认1s，即第一次重试消费会在1s后进行
            backOffMultiplier: 2 # 相邻两次重试之间的间隔时间的倍数。默认2，即第二次是第一次间隔时间的2倍，第三次是第二次的2倍
            backOffMaxInterval: 10000 # 下一次尝试重试的最大时间间隔，默认为10000ms，即10s。
        output:
          destination: mqTestDefault
          contentType: text/plain
          binder:
            # consumer:
            #  concurrency: 10
          # maxConcurrency: 15
        inputOrder:
          destination: mqTestOrder
          group: orderReceiveGroup1     # 具体分组 对应 MQ 是 队列名称 并且持久化队列
        outputOrder:
          destination: mqTestOrder
#          contentType: text/plain      # 实体 json string 在传递的类型装换 查看 http://docs.spring.io/spring-cloud-stream/docs/Chelsea.SR2/reference/htmlsingle/index.html#mime-types-and-java-types
        inputProductAdd:
          destination: mqTestProduct
          group: addProductHandler      # 拥有 group 默认会持久化队列
        outputProductAdd:
          destination: mqTestProduct
      rabbit:
        bindings:
          input:
            consumer:
              prefetch: 10
              maxConcurrency: 5
          inputProductAdd:
            consumer:
              bindingRoutingKey: addProduct.*       # 用来并不绑定消费者的 routing key
          outputProductAdd:
            producer:
              routing-key-expression: '''addProduct.*'''  # 需要用这个来指定 RoutingKey
      binders:
        defaultRabbit:
          type: rabbit
          environment:
            spring:
             rabbitmq:
              host:
              username:
              password: 

  application:
    name: spring-cloud-stream-rabbitmq
#  rabbitmq:                  # 默认的 mq的配置时候，上述的配置方式，可以支持多个 broker
#    virtual-host: dev
#    host: 127.0.0.1
#    username: username
#    password: pass